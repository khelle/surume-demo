<?php

/**
 * Class Error does not exists in PHP5, so here we create a "mock" for it based on Exception.
 * After that procedure we have hierarchy:
 *
 * /Exception
 *    /Surume/Throwable/Exception
 *    /Error
 *       /Surume/Throwable/Error
 *
 * ... in PHP5, and
 *
 * /Exception
 *    /Surume/Throwable/Exception
 * /Error
 *    /Surume/Throwable/Error
 *
 * ... in PHP7
 *
 * due to this hierarchy all catch blocks must consist of both catch (Error $ex) and catch (Exception $ex) in this
 * particular order!!! [...]
 *
 * try
 * {
 *    // some code
 * }
 * catch (Error $ex)
 * {
 *    // will catch /Error in PHP5
 *    // will catch /Error in PHP7
 *    // will catch /Surume/Throwable/Error in PHP5
 *    // will catch /Surume/Throwable/Error in PHP7
 * }
 * catch (Exception $ex)
 * {
 *    // will catch /Exception in PHP5
 *    // will catch /Exception in PHP7
 *    // will catch /Surume/Throwable/Exception in PHP5
 *    // will catch /Surume/Throwable/Exception in PHP7
 * }
 *
 * [...] and all methods that expects Exception should expect now Error|Exception, ex:
 *
 * before:
 * param Exception $ex
 * public function someMethod(Exception $ex)
 *
 * now:
 * param Error|Exception $ex
 * public function someMethod($ex)
 */
if (!class_exists('Error'))
{
    class Error extends Exception
    {}
}
